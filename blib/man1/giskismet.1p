.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.16)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "GISKISMET.MAN.1 1p"
.TH GISKISMET.MAN.1 1p "2015-06-23" "perl v5.14.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
 GISKismet - a program to visually represent the Kismet data in
 a flexible manner.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
 giskismet [Options]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
 GISKismet is a wireless recon visualization tool to represent data
 gathered using Kismet in a flexible manner. GISKismet stores the
 information in a database so that the user can generate graphs using
 SQL. GISKismet currently uses SQLite for the database and GoogleEarth
 / KML files for graphing.
.SH "OPTIONS"
.IX Header "OPTIONS"
 Usage: giskismet.pl [Options]

 Input File:
       --csv <csv-file>             Parse the input from Kismet-devel CSV
   -x  --xml <xml-file>             Parse the input from Kismet-newcore NETXML

 Input Filters: 
       --bssid file | list          Filter based on BSSID     
       --essid file | list          Filter based on ESSID 
       --encryption file | list     Filter based on Encryption 
       --channel file | list        Filter based on Channel

 file | list (list = comma separted lists(needs quotes)

 Kismet-newcore Options:
   -a  --ap                         Insert only the APs

 Query
   -q  --query [sql]                SQL query
   -m  --manual [csv]               CSV output of manual SQL query

   -o  --output [file]              Output filename
   -n  --name [str]                 Name of the KML layer
       --desc [str]                 Description of the KML layer

 General Options:                
   -d  --debug [num]                Display debug information
   -s  --silent                     No output when adding APs
   -v  --version                    Display version
   -h  --help                       Display this information

 Send Comments to Joshua D. Abraham ( jabra@spl0it.org )
 
.SH "EXAMPLE SINGLE SCAN"
.IX Header "EXAMPLE SINGLE SCAN"
 1) Insert all data from a Kismet-newcore netxml file into the
    GISKismet database

    perl giskismet -x examples/Kismet-Feb-05-2009-1.netxml

 2) Insert only the APs on channel 2

    perl giskismet -x examples/Kismet-Feb-05-2009-1.netxml --channel 2

 3) Generate a graph based on the GISKismet database

    perl giskismet -q "select * from wireless" -o ex1.kml

 4) Insert all the information from a Kismet-newcore netxml file and
    generate a graph of all the APs named linksys without encryption 

    perl giskismet -x examples/Kismet-Feb-05-2009-1.netxml 
    -q "select * from wireless where ESSID='linksys' and Encryption='None'" -o ex2.kml
.SH "FEATURE REQUESTS"
.IX Header "FEATURE REQUESTS"
 Any feature requests should be reported to the online 
 feature-request-tracking system available on the web at :  
    
    http://my-trac.assembla.com/giskismet/newticket
 
 Before requesting a feature, please check to see if the features has
 already been requested.  
.SH "BUG REPORTS"
.IX Header "BUG REPORTS"
 Any bugs found should be reported to the online bug-tracking system
 available on the web at : 
 
    http://my-trac.assembla.com/giskismet/newticket

 Before reporting a bug, please check to see if the bug has already
 been reported.
.SH "SUPPORTED DATABASES"
.IX Header "SUPPORTED DATABASES"
 The following databases are supported:

 * SQLite 
.SH "DATABASE SCHEMA"
.IX Header "DATABASE SCHEMA"
 The following is the SQLite version of the database schema:

 CREATE TABLE clients (
                cid INTEGER PRIMARY KEY AUTOINCREMENT,
                nid INTEGER NULL,
                mac text default NULL,
                manuf text default NULL,
                iptype text default NULL,
                ip text default  NULL);
 CREATE TABLE wireless (
                Id INTEGER PRIMARY KEY AUTOINCREMENT,
                NetworkID INTEGER NULL,
                NetType text default NULL,
                ESSID text default NULL,
                BSSID text default NULL,
                Manuf text default NULL,
                Info text default NULL,
                Channel INTEGER  NULL,
                Cloaked text default NULL,
                Encryption text default NULL,
                Decrypted text default NULL,
                MaxRate INTEGER  NULL,
                MaxSeenRate INTEGER NULL,
                Beacon INTEGER  NULL,
                LLC INTEGER  NULL,
                Data INTEGER  NULL,
                Crypt INTEGER  NULL,
                Weak INTEGER  NULL,
                Total INTEGER  NULL,
                Carrier text default NULL,
                Encoding text default NULL,
                FirstTime text default NULL,
                LastTime text default NULL,
                BestQuality INTEGER  NULL,
                BestSignal INTEGER  NULL,
                BestNoise INTEGER  NULL,
                GPSMinLat float NULL,
                GPSMinLon float NULL,
                GPSMinAlt float NULL,
                GPSMinSpd float NULL,
                GPSMaxLat float NULL,
                GPSMaxLon float NULL,
                GPSMaxAlt float NULL,
                GPSMaxSpd float NULL,
                GPSBestLat float NULL,
                GPSBestLon float NULL,
                GPSBestAlt float NULL,
                DataSize INTEGER NULL,
                IPType text default NULL,
                IP text default  NULL);
.SH "AUTHORS"
.IX Header "AUTHORS"
 Joshua D. Abraham ( jabra@spl0it.org )
